{"version":3,"sources":["logo.png","components/Categories.js","components/DateSelect.js","components/DurationSelect.js","components/AddEvent.js","components/Events.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Categories","_ref","onChange","defaultValue","usedCategories","react_default","a","createElement","Creatable_default","isMulti","isClearable","options","value","theme","Object","objectSpread","borderRadius","colors","neutral20","neutral30","primary","DateSelect","selected","defaultSelected","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","_useState","useState","_useState2","slicedToArray","date","setDate","useEffect","JSON","stringify","Date","currentYear","yearOptions","Array","fill","map","_","i","key","monthOptions","concat","padStart","dayOptions","hourOptions","hour","minuteOptions","minute","Fragment","className","e","persist","prevState","parseInt","target","style","marginTop","DurationSelect","Math","floor","duration","setDuration","newDuration","marginBottom","AddEvent","saveEvent","toString","categories","event","setEvent","onSubmit","preventDefault","components_Categories","components_DateSelect","components_DurationSelect","events","previousDate","removeEvent","sort","e1","e2","reverse","index","currentDate","getYear","marginRight","flex","width","color","totalMinutes","displayDuration","category","label","join","onClick","window","confirm","App","parse","localStorage","getItem","setEvents","array","result","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","has","set","push","err","return","uniq","flat","setItem","src","logo","height","alt","components_AddEvent","toConsumableArray","Events","arr","slice","remove","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3824cb7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2c69f090.png\";","import React from 'react'\nimport Select from 'react-select/lib/Creatable'\n\nconst Categories = ({ onChange, defaultValue, usedCategories }) => (\n  <Select\n    isMulti\n    isClearable={false}\n    options={usedCategories}\n    defaultValue={defaultValue}\n    onChange={value => onChange(value)}\n    theme={(theme) => ({\n      ...theme,\n      borderRadius: 4,\n      colors: {\n      ...theme.colors,\n        neutral20: '#cfeeff',\n        neutral30: '#cfeeff',\n        primary: '#cfeeff',\n      },\n    })}\n  />\n)\n\nexport default Categories\n","import React, { useState, useEffect } from 'react'\n\nconst DateSelect = ({ selected, onChange }) => {\n\n  const defaultSelected = selected ? {\n    year: selected.getFullYear(),\n    month: selected.getMonth(),\n    day: selected.getDate(),\n    hours: selected.getHours(),\n    minutes: selected.getMinutes()\n  } : {}\n\n  const [date, setDate] = useState(defaultSelected)\n\n  useEffect(() => {\n    if (JSON.stringify(defaultSelected) !== JSON.stringify(date)) {\n      onChange(new Date(date.year, date.month, date.day, date.hours, date.minutes))\n    }\n  })\n\n  const currentYear = new Date().getFullYear()\n  const yearOptions = Array(3).fill().map((_, i) => {\n    const year = currentYear - 2 + i\n\n    return (\n      <option value={year} key={year}>\n        {year}\n      </option>\n    )\n  })\n  const monthOptions = Array(12).fill().map((_, i) => {\n    const month = i+1\n\n    return(\n      <option value={month} key={month}>\n        {`${month}`.padStart(2, 0)}\n      </option>\n    )\n  })\n  const dayOptions = Array(31).fill().map((_, i) => {\n    const day = i+1\n\n    return(\n      <option value={day} key={day}>\n        {`${i+1}`.padStart(2, 0)}\n      </option>\n    )\n  })\n\n  const hourOptions = Array(24).fill().map((_, hour) => {\n    return(\n      <option value={hour} key={hour}>\n        {`${hour}`.padStart(2, 0)}\n      </option>\n    )\n  })\n\n  const minuteOptions = Array(59).fill().map((_, i) => {\n    const minute = i+1\n\n    return(\n      <option value={minute} key={minute}>\n        {`${minute}`.padStart(2, 0)}\n      </option>\n    )\n  })\n\n  return (\n    <React.Fragment>\n      <div className='dates'>\n        <select\n          value={date.day || ''}\n          onChange={(e) => {\n            e.persist()\n            setDate(prevState => ({ ...prevState, day: parseInt(e.target.value) }))\n          }}\n        >\n          {dayOptions}\n        </select>\n        <div className='separator'>/</div>\n        <select\n          value={date.month ? date.month + 1 : ''}\n          onChange={(e) => {\n            e.persist()\n            setDate(prevState => ({ ...prevState, month: parseInt(e.target.value) }))\n          }}\n        >\n          {monthOptions}\n        </select>\n        <div className='separator'>/</div>\n        <select\n          value={date.year || ''}\n          onChange={(e) => {\n            e.persist()\n            setDate(prevState => ({ ...prevState, year: parseInt(e.target.value) }))\n          }}\n        >\n          {yearOptions}\n        </select>\n      </div>\n      <div className='dates' style={{ marginTop: 10}}>\n        <select\n          value={date.hours || ''}\n          onChange={(e) => {\n            e.persist()\n            setDate(prevState => ({ ...prevState, hours: parseInt(e.target.value) }))\n          }}\n        >\n          {hourOptions}\n        </select>\n        <div className='separator'>h</div>\n        <select\n          value={date.minutes || ''}\n          onChange={(e) => {\n            e.persist()\n            setDate(prevState => ({ ...prevState, minutes: parseInt(e.target.value) }))\n          }}\n        >\n          {minuteOptions}\n        </select>\n        <div className='separator'>min</div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default DateSelect\n","import React, { useState, useEffect } from 'react'\n\nconst DurationSelect = ({ selected, onChange }) => {\n\n  const [duration, setDuration] = useState({\n    hours: selected ? Math.floor(selected / 60) : 0,\n    minutes: selected ? selected % 60 : 0\n  })\n\n  useEffect(() => {\n    const newDuration = duration.hours * 60 + duration.minutes\n\n    if (selected !== newDuration) {\n      onChange(newDuration)\n    }\n  })\n\n  const hourOptions = Array(24).fill().map((_, hour) => {\n    return(\n      <option value={hour} key={hour}>\n        {`${hour}`.padStart(2, 0)}\n      </option>\n    )\n  })\n\n  const minuteOptions = Array(12).fill().map((_, i) => {\n    const minute = (i)*5\n\n    return(\n      <option value={minute} key={minute}>\n        {`${minute}`.padStart(2, 0)}\n      </option>\n    )\n  })\n\n  return (\n    <div className='dates' style={{ marginBottom: 15}}>\n      <select\n        value={duration.hours || ''}\n        onChange={(e) => {\n          e.persist()\n          setDuration(prevState => ({ ...prevState, hours: parseInt(e.target.value) }))\n        }}\n      >\n        {hourOptions}\n      </select>\n      <div className='separator'>h</div>\n      <select\n        value={duration.minutes || ''}\n        onChange={(e) => {\n          e.persist()\n          setDuration(prevState => ({ ...prevState, minutes: parseInt(e.target.value) }))\n        }}\n      >\n        {minuteOptions}\n      </select>\n      <div className='separator'>min</div>\n    </div>\n  )\n}\n\nexport default DurationSelect\n","import React, { useState } from 'react'\nimport Categories from './Categories'\nimport DateSelect from './DateSelect'\nimport DurationSelect from './DurationSelect'\n\nconst AddEvent = ({ saveEvent, usedCategories }) => {\n\n  const [event, setEvent] = useState({\n    date: new Date().toString(),\n    categories: []\n  })\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault()\n        saveEvent(event)\n      }}\n    >\n      <label>Évènement</label>\n      <Categories\n        defaultValue={event.categories}\n        onChange={categories => setEvent(prevState => ({...prevState, categories }))}\n        usedCategories={usedCategories}\n      />\n      <label>Date</label>\n      <DateSelect\n        onChange={(date) => setEvent(prevState => ({...prevState, date: date ? date.toString() : null }))}\n        selected={event.date ? new Date(event.date) : null}\n      />\n      <label>Durée</label>\n      <div className='duration'>\n        <DurationSelect\n          onChange={(duration) => setEvent(prevState => ({...prevState, duration }))}\n          selected={event.duration}\n        />\n      </div>\n      <button>\n        Créer un évènement\n      </button>\n    </form>\n  );\n}\n\nexport default AddEvent\n","import React from 'react'\n\nconst displayDuration = (duration) => {\n  if (duration) {\n    // We need this for backward compatibility\n    // when duration was stored as an object { label: label, value: value }\n    const totalMinutes = duration.value || duration\n\n    const hours = Math.floor(totalMinutes / 60)\n    const minutes = totalMinutes % 60\n    let newDuration = `${minutes}min`\n    if (hours) newDuration = `${hours}h${newDuration}`\n\n    return `${newDuration}`\n  }\n}\n\nconst events = ({ events, removeEvent }) => {\n\n  let previousDate\n\n  return (\n    <div className='events'>\n      {\n        events.sort((e1, e2) => new Date(e1.date) - new Date(e2.date)).reverse().map((event, index) => {\n          const date = new Date(event.date)\n          const currentDate = `${date.getDate()}${date.getMonth()}${date.getYear()}`\n\n          const day = (currentDate !== previousDate) ?\n            `${`${date.getDate()}`.padStart(2, 0)}/${`${date.getMonth()+1}`.padStart(2, 0)}` :\n            null\n\n          previousDate = currentDate\n          return (\n            <div key={index}>\n              {\n                day &&\n                <div className='day'>\n                  {day}\n                </div>\n              }\n              <div className='event'>\n                <div style={{ marginRight: 15, flex: 'none', width: 60 }}>\n                  <div className='date'>\n                    {`${date.getHours()}`.padStart(2, 0)}h{`${date.getMinutes()}`.padStart(2, 0)}\n                  </div>\n                  <small style={{ color: '#999'}}>\n                    {displayDuration(event.duration)}\n                  </small>\n                </div>\n                <div className='categories'>\n                  {event.categories.map(category => category.label).join(', ')}\n                </div>\n                <div className='delete'\n                  onClick={\n                    () => {\n                      if (window.confirm(\"Supprimer l'évènement ?\")) {\n                        removeEvent(index)\n                      }\n                    }\n                  }\n                >\n                  ×\n                </div>\n              </div>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default events\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport AddEvent from './components/AddEvent'\nimport Events from './components/Events'\nimport logo from './logo.png'\n\nconst uniq = (array) => {\n  const result = []\n  const map = new Map()\n  for (const item of array) {\n      if(!map.has(item.value)) {\n          map.set(item.value, true)\n          result.push({\n              value: item.value,\n              label: item.label\n          })\n      }\n  }\n  return result\n}\n\nconst remove = (arr, index) => {\n  return arr.slice(0,index).concat(arr.slice(index+1))\n}\n\nconst App = () => {\n  const [events, setEvents] = useState(JSON.parse(localStorage.getItem('events')) || [])\n  const addEvent = event => setEvents([...events, event])\n  const removeEvent = index => setEvents(remove(events, index))\n\n  const usedCategories = uniq(events.map(event => event.categories).flat())\n\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events))\n  })\n\n  return (\n    <div className=\"container\">\n      <div className='header'>\n        <h1>\n          <img src={logo} width='28' height='28' alt='logo' />\n          Maël\n        </h1>\n      </div>\n      <AddEvent saveEvent={addEvent} usedCategories={usedCategories} />\n      <Events events={events} removeEvent={removeEvent} />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}